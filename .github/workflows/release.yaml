name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: | 
          sudo snap install snapcraft --classic
          npm run build:linux

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: |
          cmd
          md cert
          cd cert
          curl https://raw.githubusercontent.com/nazzz-infotech/SpreadCombine/refs/heads/master/cert/NazzInfotechCert.pfx -O
          powershell
          New-Item -ItemType Directory -Path cert
          $env:CSC_LINK="./cert\NazzzInfotechCert.pfx"
          $env:CSC_KEY_PASSWORD="1234"
          npm run build:win

      - name: Build macOS
        if: matrix.os == 'macos-latest'
        run: npm run build:mac

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: dist

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Generate Release Notes
        run: |
          echo "# SpreadCombine ${GITHUB_REF_NAME}" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## What's New" >> RELEASE_NOTES.md
          echo "- Linux: AppImage, DEB, RPM" >> RELEASE_NOTES.md
          echo "- Windows: EXE" >> RELEASE_NOTES.md
          echo "- macOS: DMG" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## ***It Is The First Release***" >> RELEASE_NOTES.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          body_path: RELEASE_NOTES.md
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}